
4 - 

int main( void )
{

char polo1[6] = {BIT0,BIT1,BIT0,BIT2,BIT1,BIT2};
char polo2[6] = {BIT1,BIT0,BIT2,BIT0,BIT2,BIT1};


  WDTCTL = WDTPW + WDTHOLD;

  while(1){

      for (i=0;i <6 ;i++){
      P1DIR &= ~(BIT0+BIT1+BIT2);
      P1DIR |= (polo1[i]+polo2[i]);
      P1OUT &= ~polo2[i];
      P1OUT |= polo1[i];

      }


  }
  return 0;
}

5-
#include <msp430.h>
int a = 0;
int i ;
int w=0;
char polo1[6] = {BIT0,BIT1,BIT0,BIT2,BIT1,BIT2};
char polo2[6] = {BIT1,BIT0,BIT2,BIT0,BIT2,BIT1};

int delay(volatile int j){
    while(j>0){
        j --;
    }
}

int main( void )
{

  WDTCTL = WDTPW + WDTHOLD;

  while(1){
      
      if (a > 10000){ //Delay para ficar aceso somente dois leds
        w++;
        a = 0;
        if (w>4){ // reseta w para não ultrapassar o tamanho dos vetore polo1 e polo2 
            w=0;
        }
      }
      else{
      for (i=0;i <2;i++ ){//laço que acende somente dois leds em alta velocidade
      P1DIR &= ~(BIT0+BIT1+BIT2);
      P1DIR |= (polo1[i+w]+polo2[i+w]);
      P1OUT &= ~polo2[i+w];
      P1OUT |= polo1[i+w];
      a ++; // incremento de 'a' para o delay
      
      }}
      

  }
  return 0;
}
